@startuml DomainModelDiagram
left to right direction

package "PointOfSale <<Bounded Context>>" #DDDDDD {

    class PointOfSale <<Entity>> <<Aggregate Root>> {
        -ID : long
        -Description : string
    }

    object PointOfSale.PointOfSaleID <<Value Object>>

    PointOfSale -- PointOfSale.PointOfSaleID
}

package "MealItem <<Bounded Context>>" #DDDDDD {

    class MealItem <<Entity>> <<Aggregate Root>> {
        -ID : long
        -ProductionDate : datetime
        -ExpirationDate : datetime
        -MealIdentificationNumberStatic : string
    }

    object MealItem.PointOfSaleID <<Value Object>>

    object MealItem.MealID <<Value Object>>

    MealItem -- MealItem.PointOfSaleID
    MealItem -- MealItem.MealID
}

package "Meal <<Bounded Context>>" #DDDDDD {

    class Meal <<Entity>> <<Aggregate Root>> {
        -ID : long
        -Description : string
        -AlergicComponents : List<AlergicComponent>
        -Ingredients : List<Ingredient>
        -MealDescriptors : List<MealDescriptor>

        +void AddAlergicComponent()
        +void AddIngredient()
        +void AddMealDescriptor()

        +void RemoveAlergicComponent()
        +void RemoveIngredient()
        +void RemoveMealDescriptor()
    }

    class Ingredient <<Entity>> {
        -ID : long
        -Description : string
    }

    class AlergicComponent <<Entity>> {
        -ID : long
        -Description : string
    }

    class MealDescriptor <<Entity>> {
        -ID : long
        -Description : string
        -Name : string
    }

    object MealIdentificationNumber <<ValueObject>> {
        -MealIdentificationNumberPrefix : string

        +bool ChangeMealIdentificationNumberGen()
        +string GenerateMealIdentificationNumber()
    }

    object Meal.MealID <<Value Object>>

    Meal "0..*" -- "0..*" AlergicComponent
    Meal "1" -- "0..*" MealDescriptor
    Meal "0..*" -- "1..*" Ingredient
    Meal -- MealIdentificationNumber
    Meal -- Meal.MealID
}

PointOfSale "1" .. "0..*" MealItem

MealItem "0..*" .. "1" Meal



package "Log <<Bounded Context>>" #DDDDDD {

    interface WriteLog

    class EventLog  {
        -ID : long
        -Description : string
        -UserTypeID : User
        -Action : EventAction
        -Class : T
        -Date : DateTime

        +WriteLog()
    }

    enum EventAction {
        - Add
        - Create
        - Update
        - Delete
    }

    class UserType {
        -ID : long
        -Description : string
    }

    object UserTypeID <<ValueObject>>

    WriteLog <|.. EventLog
    EventLog -- UserTypeID
    EventLog -- EventAction
    EventLog "0..*" -- "1" UserType
}


@enduml